name: Build & Publish Docker Image

on:
  pull_request:
    branches:
      - master
    paths:
      - 'docker/Dockerfile'
      - 'docker/semver'
      - 'docker/plugins.txt'
    types:
      - opened
      - closed
      - synchronize

env:
  DOCKER_HUB_NAMESPACE: hfoster
  DOCKER_HUB_IMAGE_NAME: blueocean-k8s

jobs:
  image_validate:
    name: Validate Docker Image
    runs-on: ubuntu-latest
    if: github.event.pull_request.merged != true
    steps:

    - name: Checkout
      uses: actions/checkout@v2.3.4

    - name: Setup Buildx for Docker
      uses: docker/setup-buildx-action@v1.5.1
      with:
        version: latest
        install: true

    - name: Get git hash
      id: git_hash
      run: |
        echo ::set-output name=GIT_HASH_SHORT::$(git rev-parse --verify --short HEAD)

    - name: Docker Login
      uses: docker/login-action@v1.10.0
      with:
        username: ${{ secrets.DOCKER_HUB_USER }}
        password: ${{ secrets.DOCKER_HUB_PASS }}

    - name: Build Docker image for validation
      uses: docker/build-push-action@v2.6.1
      with:
        context: docker
        push: true
        tags: ${{ env.DOCKER_HUB_NAMESPACE }}/${{ env.DOCKER_HUB_IMAGE_NAME }}:ci-build-${{ steps.git_hash.outputs.GIT_HASH_SHORT }}
    
    - name: Inspect image
      id: inspect
      run: |
        echo ::set-output name=REPORT::$(docker buildx imagetools inspect ${{ env.DOCKER_HUB_NAMESPACE }}/${{ env.DOCKER_HUB_IMAGE_NAME }}:ci-build-${{ steps.git_hash.outputs.GIT_HASH_SHORT }})

    - name: Image inspect report -> PR comment
      uses: actions/github-script@v4.1.0
      env:
        INSPECT: "docker buildx\n${{ steps.inspect.outputs.REPORT }}"
      with:
        github-token: ${{ github.token }}
        script: |
          const output = `### Docker Buildx Inspect Report for ${{ env.DOCKER_HUB_NAMESPACE }}/${{ env.DOCKER_HUB_IMAGE_NAME }}:ci-build-${{ steps.git_hash.outputs.GIT_HASH_SHORT }} üïµüèæ\`${{ steps.isnpect.outcome }}\`

          <details><summary>Show Inspection Report</summary>

          \`\`\`\n
          ${process.env.INSPECT}
          \`\`\`

          </details>

          *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`, Workflow: \`${{ github.workflow }}\`*`;
        
          github.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: output
          })

    - name: Scan Image
      uses: snyk/actions/docker@master
      continue-on-error: true
      with:
        image: ${{ env.DOCKER_HUB_NAMESPACE }}/${{ env.DOCKER_HUB_IMAGE_NAME }}:ci-build-${{ steps.git_hash.outputs.GIT_HASH_SHORT }}
        args: --file=docker/Dockerfile
      env:
        SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}

    - name: Upload Snyk scan result to GitHub Code Scanning
      uses: github/codeql-action/upload-sarif@v1
      with:
        sarif_file: snyk.sarif

  image_build_publish:
    name: Build Docker Image
    runs-on: ubuntu-latest
    if: github.event.pull_request.merged == true
    steps:

    - name: Checkout
      uses: actions/checkout@v2.3.4

    - name: Get Semantic Version
      id: semver
      run: |
        echo ::set-output name=SEM_VER::$(cat docker/semver)

    - name: Docker Login
      uses: docker/login-action@v1.10.0
      with:
        username: ${{ secrets.DOCKER_HUB_USER }}
        password: ${{ secrets.DOCKER_HUB_PASS }}

    - name: Setup Buildx for Docker
      uses: docker/setup-buildx-action@v1.5.1
      with:
        version: latest
        install: true

    - name: Build & Publish Docker Image
      uses: docker/build-push-action@v2.6.1
      with:
        context: docker
        push: true
        tags: |
          ${{ env.DOCKER_HUB_NAMESPACE }}/${{ env.DOCKER_HUB_IMAGE_NAME }}:${{ steps.semver.outputs.SEM_VER }},
          ${{ env.DOCKER_HUB_NAMESPACE }}/${{ env.DOCKER_HUB_IMAGE_NAME }}:latest
          